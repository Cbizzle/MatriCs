int main() {
	float[7] soap;
	float[7] suds;
	float[2,2] mat;
	float[1,2] col;
	float[2,2] inverse;
	float[1,2] intercepts;

	float soap_sum;
	float suds_sum;
	float sosu;
	float soapsq;
	float inv_mult;

	int i;
	int j;
	int counter;
	int first;

	soap = [4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0];
	suds = [33.0, 42.0, 45.0, 51.0, 53.0, 61.0, 62.0];

	soap_sum = 0.0;
	suds_sum = 0.0;
	first = 0;
	for(i = 0; i < 7; i = i + 1) {
		soap_sum = soap_sum + soap[first];
		suds_sum = suds_sum + suds[first];
		first = first + 1;
	}

	sosu = 0.0;
	soapsq = 0.0;
	counter = 0;
	for(j = 0; j < 7; j = j + 1) {
		sosu = sosu + soap[counter]*suds[counter];
		soapsq = soapsq + soap[counter]*soap[counter];
		counter = counter + 1;
	}

	mat[0,0] = 7.0;
	mat[0,1] = soap_sum;
	mat[1,0] = soap_sum;
	mat[1,1] = soapsq;

	col[0,0] = suds_sum;
	col[0,1] = sosu;

	// print_float(mat[0,0]);
	// print_float(mat[0,1]);
	// print_float(mat[1,0]);
	// print_float(mat[1,1]);
	// print_float(col[0,0]);
	// print_float(col[0,1]);

    inv_mult = 1.0/((mat[0,0]*mat[1,1]) - (mat[0,1]*mat[1,0]));

    inverse[0,0] = inv_mult * mat[1,1];
    inverse[0,1] = (inv_mult * mat[0,1]) * -1;
    inverse[1,0] = (inv_mult * mat[1,0]) * -1;
    inverse[1,1] = inv_mult * mat[0,0];

    intercepts[0,0] = inverse[0,0]*col[0,0] + inverse[0,1]*col[0,1];
    intercepts[0,1] = inverse[1,0]*col[0,0] + inverse[1,1]*col[0,1];

    print_float(intercepts[0,0]);
    print_float(intercepts[0,1]);

}